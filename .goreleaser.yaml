# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 1
gomod:
  proxy: true
  env:
    - GOPROXY=https://proxy.golang.org,direct
    - GOSUMDB=sum.golang.org
  mod: mod
before:
  hooks:
    # You may remove this if you don't use go modules.
    # - go mod tidy #tidy should be done before pushing
    - go mod download
    # you may remove this if you don't need go generate
    - go generate ./...
git:
  ignore_tags:
  # doesn't work
  - vault-autounseal-operator-*

env:
  - REGISTRY={{ if index .Env "REGISTRY"  }}{{ .Env.REGISTRY }}{{ else }}local{{ end }}
  - IMAGE_NAME={{ if index .Env "IMAGE_NAME"  }}{{ .Env.IMAGE_NAME }}{{ else }}vault-autounseal-operator{{ end }}

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    main: ./cmd/vault-autounseal-operator
    goarch:
      - amd64
      - arm64

dockers:
  - image_templates:
    - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ if .IsSnapshot }}{{ .Version }}{{ else }}{{ .Tag }}{{ end }}-amd64'
    use: buildx
    build_flag_templates:
    - "--pull"
    - "--platform=linux/amd64"
    goarch: amd64
    dockerfile: Dockerfile.goreleaser
    skip_push: false

  - image_templates:
    - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ if .IsSnapshot }}{{ .Version }}{{ else }}{{ .Tag }}{{ end }}-arm64'
    use: buildx
    build_flag_templates:
    - "--pull"
    - "--platform=linux/arm64"
    goarch: arm64
    dockerfile: Dockerfile.goreleaser
    skip_push: false

docker_manifests:
  - name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ if .IsSnapshot }}{{ .Version }}{{ else }}{{ .Tag }}{{ end }}'
    image_templates:
    - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ if .IsSnapshot }}{{ .Version }}{{ else }}{{ .Tag }}{{ end }}-amd64'
    - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ if .IsSnapshot }}{{ .Version }}{{ else }}{{ .Tag }}{{ end }}-arm64'
    skip_push: false

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title  .Os }}_
      {{- if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  prerelease: auto
  footer: |
    ## Docker Images
    - `{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ if .IsSnapshot }}{{ .Version }}{{ else }}{{ .Tag }}{{ end }}`

snapshot:
  name_template: '{{ if index .Env "SNAPSHOT_VERSION" }}{{ .Env.SNAPSHOT_VERSION }}{{ else }}{{ incpatch .Version }}-devel{{ end }}'

#docker_signs:
#  - artifacts: all
